# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
  export ZSH=/home/tom/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes

ZSH_THEME="powerlevel9k/powerlevel9k"

# Custom dir style
POWERLEVEL9K_SHORTEN_DIR_LENGTH="2"
POWERLEVEL9K_SHORTEN_STRATEGY="default"
POWERLEVEL9K_SHORTEN_DELIMITER="*"

# Mostly hide context
DEFAULT_USER="tom"

# Warn when AWS DB set
POWERLEVEL9K_CUSTOM_DB_WARNING='[[ $DATABASE_URL = *"aws"* ]] && echo "$fg_bold[white]AWS DB$fg_no_bold[white]"'
POWERLEVEL9K_CUSTOM_DB_WARNING_BACKGROUND="red"

# Warn when AWS DB set
POWERLEVEL9K_CUSTOM_RVM="echo $rvm_ruby_string"
POWERLEVEL9K_CUSTOM_RVM_BACKGROUND="197"
POWERLEVEL9K_CUSTOM_RVM_FOREGROUND="black"

POWERLEVEL9K_NVM_FOREGROUND="black"

POWERLEVEL9K_DIR_DEFAULT_BACKGROUND="208"
POWERLEVEL9K_DIR_HOME_BACKGROUND="255"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND="255"

POWERLEVEL9K_VI_INSERT_MODE_STRING="I"
POWERLEVEL9K_VI_COMMAND_MODE_STRING="N"
POWERLEVEL9K_VI_MODE_INSERT_BACKGROUND='242'
POWERLEVEL9K_VI_MODE_INSERT_FOREGROUND='000'
POWERLEVEL9K_VI_MODE_NORMAL_BACKGROUND='220'
POWERLEVEL9K_VI_MODE_NORMAL_FOREGROUND='000'

# Prompt element configuration
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir virtualenv nvm custom_rvm docker_machine vcs vi_mode custom_db_warning)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs)

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  docker
  docker-compose
  dotenv
  history
  npm
  nvm
  pip
  python
  rust
  rustup
  rvm
  tmux
  ubuntu
  vi-mode
  yarn
)

source $ZSH/oh-my-zsh.sh

# User configuration

## reinstate zsh default keybindings when using vi-mode

# # fuzzy up/down search
# # start typing + [Up-Arrow] - fuzzy find history forward
# if [[ "${terminfo[kcuu1]}" != "" ]]; then
#   autoload -U up-line-or-beginning-search
#   zle -N up-line-or-beginning-search
#   bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
# fi
# 
# # start typing + [Down-Arrow] - fuzzy find history backward
# if [[ "${terminfo[kcud1]}" != "" ]]; then
#   autoload -U down-line-or-beginning-search
#   zle -N down-line-or-beginning-search
#   bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
# fi
# 
# # reverse command completion
# bindkey '^[[Z' reverse-menu-complete

# overload vi visual mode back to editing in vim
bindkey -M vicmd 'v' edit-command-line

# make timeout for escape key a lot shorter
# 10ms for key sequences
KEYTIMEOUT=1

# Save history lines practially forever
SAVEHIST="$((2 ** 31))"
HISTSIZE="$SAVEHIST"
export SAVEHIST
export HISTSIZE


## end vi-mode overrides


# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# remap capslock to escape
xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape'
# python -c 'from ctypes import *; X11 = cdll.LoadLibrary("libX11.so.6"); display = X11.XOpenDisplay(None); X11.XkbLockModifiers(display, c_uint(0x0100), c_uint(2), c_uint(0)); X11.XCloseDisplay(display)'

# Add yarn
YARN_HOME="$HOME/.yarn"
[[ -d "$YARN_HOME" ]] && export PATH=$PATH:$YARN_HOME/bin
alias yarn-count='yarn list | sed -r "s/^\W*([\.a-zA-Z0-9-]+)@.*$/\1/" | wc -l'
alias yarn-count-pkg='yarn list | sed -r "s/^\W*([\.a-zA-Z0-9-]+)@.*$/\1/" | sort | uniq | wc -l'

# Add rustup
export PATH="$HOME/.cargo/bin:$PATH"

# Add linkerd
export PATH="$HOME/.linkerd2/bin:$PATH"

# Add nvm
# aur script
[[ -s "/usr/share/nvm/init-nvm.sh" ]] && . "/usr/share/nvm/init-nvm.sh"
# ubuntu script
NVM_DIR="$HOME/.nvm"
if [ -d $ZSHRCD ]; then
  export NVM_DIR=$NVM_DIR
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
fi

# Add pipenv and other user local scripts
[[ -d "$HOME/.local/bin" ]] && export PATH=$PATH:$HOME/.local:$HOME/.local/bin

# Add RVM.
RVM_HOME="/usr/share/rvm"
[[ -d "$RVM_HOME/bin" ]] && export PATH=$PATH:$RVM_HOME/bin
[[ -s "$RVM_HOME/scripts/rvm" ]] && . "$RVM_HOME/scripts/rvm"

# Load external zshrc related files
GRADLE_BIN="/opt/gradle/gradle-5.5.1/bin"
if [ -d "$GRADLE_BIN" ]; then
  export PATH=$PATH:$GRADLE_BIN
fi

# Load external zshrc related files
ZSHRCD="$HOME/.zshrc.d"
if [ -d $ZSHRCD ]; then
  for file in $ZSHRCD/*; do
    source $file
  done
fi

# Use buildkit for docker & docker-compose
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1


[ -f ~/.config/broot/launcher/bash/br ] && source ~/.config/broot/launcher/bash/br

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

alias clip='xclip -selection c'
alias resource='. ~/.zshrc'
alias esm='exercism'

function wacup() {
  # Find device names with `xsetwacom --list`, `HEAD-x` indicates screen number
  xsetwacom --set 'Wacom One by Wacom M Pen stylus' MapToOutput 'HEAD-2'
  xsetwacom --set 'Wacom One by Wacom M Pen eraser' MapToOutput 'HEAD-2'
}

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/tom/google-cloud-sdk/path.zsh.inc' ]; then . '/home/tom/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/tom/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/tom/google-cloud-sdk/completion.zsh.inc'; fi


export TERM=xterm-256color
