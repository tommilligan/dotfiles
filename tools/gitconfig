[include]
path = .gitconfig-user

[push]
default = simple

[alias]
# Show a pretty graph. Add --all to see all tags
review = log --oneline --graph --decorate

# Rebase the brach onto its common ancestor with master
squash = !git rebase -i $(git merge-base HEAD master)

# Delete a branch both locally and on origin
purge = "!purge() { echo \"> delete merged branches\" && git branch --list --merged master | rg -v ' master$' | xargs git branch -d; }; purge"
remote-purge = "!remote_purge() { echo \"> $1: fetch\" && git fetch \"$1\" && echo \"> $1: prune\" && git remote prune \"$1\" && echo \"> $1: delete merged branches\" && git branch --list --remote --merged \"$1/master\" | rg \".*\\b${1}/(\\S+)\\b.*\" -r '$1' | rg -v '^(master|staging|HEAD)$' | xargs git push \"$1\" --delete; }; remote_purge"

# See how the current branch differs from common ancestor
# If this is empty, the branch has probably been merged with master
diverge = "!diverge() { local branch_name=$1; shift; git diff $branch_name...HEAD $@; }; diverge"

[commit]
gpgsign = true

[core]
excludesfile = ~/.gitignore_global
