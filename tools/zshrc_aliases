export-envfile(){
  if [ "$#" -ne 1 ]; then
    printf "Usage: export-envfile <env-file>
Export an environment file into the current shell.
File must be in the format:
<KEY>=<VALUE>
" >&2
    return 3
  fi
  export $(cat $1 | xargs)
}

git-check(){
  if [ "$#" -ne 2 ]; then
    printf "Usage: git-check <diff-base> <path-regex>
Check file paths modified since <commit> match <regex>.
Non-matching paths will be printed on stdout.
" >&2
    return 3
  fi
  # Filepaths
  git diff --name-only "$1" | \
  # Filter by regex, return success if nothing found
  grep -vE "$2" || return 0
  # If grep successfully got some files, return error code
  return 4
}

pytest-debug(){
  if [ "$#" -lt 1 ]; then
    printf "Usage: pytest-debug <test-pattern> [...args]
Fast pytest matching test functions. Drop into debugger on first fail.
" >&2
    return 3
  fi
  pytest --pdb -xk $@
}

alias random-boolean='if (( RANDOM % 2 )); then false; fi'
json_escape () {
    python -c 'import json,sys; print(json.dumps(sys.stdin.read()))'
}
alias yaml-as-json='python -c "import json, sys, yaml; fh = open(sys.argv[1]); print(json.dumps(yaml.load(fh), indent=2)); fh.close"'
alias dockviz="sudo docker run -it -v /var/run/docker.sock:/var/run/docker.sock nate/dockviz"
alias grep-env="grep -E 'process\.env|os.*env|ENV'"

# Docker compose shortcuts.
alias dc='docker-compose'
alias dcr='docker-compose rm'
alias dcu='docker-compose up'
alias dcs='docker-compose stop'
alias dcb='docker-compose build'

# Overriding aliases
alias vim='nvim'

### Enterprice dependency stuff
# License/authors of direct python dependencies only (from Pipfile)
# Require `pip install pipenv pip-licenses`
alias pipfile-licenses='pip-licenses --with-authors | grep -Ei "$( python -c "from pipenv.core import project; print(\"^ (\" + \"|\".join(project.all_packages.keys()) + \") \", end=\"\")" )"'

alias mk='minikube'
alias sourceme='. ~/.zshrc'

function cargo-clean-all() {
  fd Cargo.toml | xargs dirname | xargs -n1 -I '{}' bash -c 'echo "Cleaning {}" && cd {} && cargo clean || exit 255'
}
